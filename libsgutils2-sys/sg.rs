/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
pub type int8_t = i8;
pub type int16_t = i16;
pub type int32_t = i32;
pub type int64_t = i64;
pub type uint8_t = u8;
pub type uint16_t = u16;
pub type uint32_t = u32;
pub type uint64_t = u64;
pub type int_least8_t = ::std::os::raw::c_char;
pub type int_least16_t = ::std::os::raw::c_short;
pub type int_least32_t = ::std::os::raw::c_int;
pub type int_least64_t = ::std::os::raw::c_long;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type uint_least64_t = ::std::os::raw::c_ulong;
pub type int_fast8_t = ::std::os::raw::c_char;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intptr_t = isize;
pub type uintptr_t = usize;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
pub type size_t = usize;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct sg_iovec {
    pub iov_base: *mut ::std::os::raw::c_void,
    pub iov_len: size_t,
}
impl ::std::default::Default for sg_iovec {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type sg_iovec_t = sg_iovec;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct sg_io_hdr {
    pub interface_id: ::std::os::raw::c_int,
    pub dxfer_direction: ::std::os::raw::c_int,
    pub cmd_len: ::std::os::raw::c_uchar,
    pub mx_sb_len: ::std::os::raw::c_uchar,
    pub iovec_count: ::std::os::raw::c_ushort,
    pub dxfer_len: ::std::os::raw::c_uint,
    pub dxferp: *mut ::std::os::raw::c_void,
    pub cmdp: *mut ::std::os::raw::c_uchar,
    pub sbp: *mut ::std::os::raw::c_uchar,
    pub timeout: ::std::os::raw::c_uint,
    pub flags: ::std::os::raw::c_uint,
    pub pack_id: ::std::os::raw::c_int,
    pub usr_ptr: *mut ::std::os::raw::c_void,
    pub status: ::std::os::raw::c_uchar,
    pub masked_status: ::std::os::raw::c_uchar,
    pub msg_status: ::std::os::raw::c_uchar,
    pub sb_len_wr: ::std::os::raw::c_uchar,
    pub host_status: ::std::os::raw::c_ushort,
    pub driver_status: ::std::os::raw::c_ushort,
    pub resid: ::std::os::raw::c_int,
    pub duration: ::std::os::raw::c_uint,
    pub info: ::std::os::raw::c_uint,
    _bindgen_padding_0_: [u8; 4usize],
}
impl ::std::default::Default for sg_io_hdr {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type sg_io_hdr_t = sg_io_hdr;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct sg_scsi_id {
    pub host_no: ::std::os::raw::c_int,
    pub channel: ::std::os::raw::c_int,
    pub scsi_id: ::std::os::raw::c_int,
    pub lun: ::std::os::raw::c_int,
    pub scsi_type: ::std::os::raw::c_int,
    pub h_cmd_per_lun: ::std::os::raw::c_short,
    pub d_queue_depth: ::std::os::raw::c_short,
    pub unused: [::std::os::raw::c_int; 2usize],
}
impl ::std::default::Default for sg_scsi_id {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct sg_req_info {
    pub req_state: ::std::os::raw::c_char,
    pub orphan: ::std::os::raw::c_char,
    pub sg_io_owned: ::std::os::raw::c_char,
    pub problem: ::std::os::raw::c_char,
    pub pack_id: ::std::os::raw::c_int,
    pub usr_ptr: *mut ::std::os::raw::c_void,
    pub duration: ::std::os::raw::c_uint,
    pub unused: ::std::os::raw::c_int,
}
impl ::std::default::Default for sg_req_info {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type sg_req_info_t = sg_req_info;
pub type Sg_io_hdr = sg_io_hdr;
pub enum sg_io_vec { }
pub type Sg_io_vec = sg_io_vec;
pub type Sg_scsi_id = sg_scsi_id;
pub type Sg_req_info = sg_req_info;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct sg_header {
    pub pack_len: ::std::os::raw::c_int,
    pub reply_len: ::std::os::raw::c_int,
    pub pack_id: ::std::os::raw::c_int,
    pub result: ::std::os::raw::c_int,
    pub _bindgen_bitfield_1_: ::std::os::raw::c_uint,
    pub sense_buffer: [::std::os::raw::c_uchar; 16usize],
}
impl ::std::default::Default for sg_header {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
